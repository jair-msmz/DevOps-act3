name: Flask Docker

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build-and-test:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Docker
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        run: docker build -t flask-docker-app ./app

      - name: Run Docker Compose
        run: docker compose -f docker-compose.yml up -d

      - name: Test the app
        run: |
          sleep 15
          curl -s http://localhost:5001
      
      - name: Log in to Docker Hub 
        uses: docker/login-action@v2 
        with:
          username: ${{ secrets.DOCKER_USERNAME }} 
          password: ${{ secrets.DOCKER_TOKEN }}

      - name: Build and push Docker image
        uses: docker/build-push-action@v5 
        with:
          context: ./app
          file: ./app/Dockerfile
          platforms: linux/amd64,linux/arm64
          push: true
          tags: jairmsmz/flask-devops-app:latest
      
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-session-token: ${{ secrets.AWS_SESSION_TOKEN }}
          aws-region: us-east-1
      
      - name: EC2 Deployment
        env:
          PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}
          IP_ADDRESS: ${{ secrets.IP_ADDRESS }}
          USER_NAME: ${{ secrets.EC2_USER_NAME }}
        run: |
          echo "$PRIVATE_KEY" > private_key && chmod 600 private_key
          ssh -o StrictHostKeyChecking=no -i private_key ${USER_NAME}@${IP_ADDRESS} '
            sudo apt update
            sudo apt install -y python3 python3-pip python3-venv git

            cd /home/ubuntu
            rm -rf DevOps-act3
            git clone https://github.com/jair-msmz/DevOps-act3.git
            cd DevOps-act3

            python3 -m venv venv
            source venv/bin/activate
            pip install --upgrade pip
            pip install -r app/requirements.txt

            fuser -k 5001/tcp || true  # mata cualquier proceso anterior en el puerto 5001
            nohup flask run --host=0.0.0.0 --port=5001 &
          '

      - name: Trigger Render Deploy
        run: |
          curl -X POST https://api.render.com/deploy/srv-${{ secrets.RENDER_SERVICE_ID }} \
          -H 'Authorization: Bearer ${{ secrets.RENDER_API_KEY }}' \
          -H 'Accept: application/json'